{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Product_Table",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "store",
						"type": "DatasetReference"
					},
					"name": "source2"
				},
				{
					"dataset": {
						"referenceName": "transaction",
						"type": "DatasetReference"
					},
					"name": "source3"
				},
				{
					"dataset": {
						"referenceName": "customer",
						"type": "DatasetReference"
					},
					"name": "source4"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ProductOne",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "Transaction_Table",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"dataset": {
						"referenceName": "Customer_DB",
						"type": "DatasetReference"
					},
					"name": "sink3"
				},
				{
					"dataset": {
						"referenceName": "Store_DB",
						"type": "DatasetReference"
					},
					"name": "sink4"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "select2"
				},
				{
					"name": "select3"
				},
				{
					"name": "select4"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as string,",
				"          image_url as string,",
				"          image_url_suffix as string,",
				"          imageUrls as string,",
				"          product_url as string,",
				"          color as string,",
				"          size as string,",
				"          width as string,",
				"          brand_name as string,",
				"          brand_name_en as string,",
				"          brand_logo as string,",
				"          model_name as string,",
				"          prices as string,",
				"          is_tbyb as string,",
				"          tags as string,",
				"          color_options as string,",
				"          totalColorAvailable as string,",
				"          is_ditto as string,",
				"          sku as string,",
				"          hover_image_url as string,",
				"          classification as string,",
				"          specifications as string,",
				"          wishlistCount as string,",
				"          purchaseCount as string,",
				"          avgRating as string,",
				"          totalNoOfRatings as string,",
				"          hashtagList as string,",
				"          offerName as string,",
				"          cmsLinkAndroid as string,",
				"          cmsLinkIos as string,",
				"          arModelAndroidUrl as string,",
				"          arModelIOSUrl as string,",
				"          arModelMsiteAndDesktopUrl as string,",
				"          arModelOriginalUrl as string,",
				"          qty as string,",
				"          frameColorImage as string,",
				"          subCollection as string,",
				"          subCollectionId as string,",
				"          relatedItems as string,",
				"          isCygnusEnabled as string,",
				"          isCashbackApplicable as string,",
				"          searchProductName as string,",
				"          prescriptionType as string,",
				"          arProductImageUrl as string,",
				"          occasion as string,",
				"          suited_for as string,",
				"          inclusiveText as string,",
				"          clUsage as string,",
				"          tryOnImageUrl as string,",
				"          offer_image as string,",
				"          isCombo as string,",
				"          comboImageUrl as string,",
				"          comboDescription as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          id as string,",
				"          flag as string,",
				"          lk_store_id as string,",
				"          store as string,",
				"          si_store_id as string,",
				"          alt_store_name_catch as string,",
				"          status as string,",
				"          store_open_status as string,",
				"          store_pickup_available as string,",
				"          brand_lk_jj as string,",
				"          store_type_labels as string,",
				"          location_type_labels as string,",
				"          address_full as string,",
				"          address_line_1 as string,",
				"          address_line_2 as string,",
				"          address_locality as string,",
				"          address_landmark as string,",
				"          address_city as string,",
				"          address_state as string,",
				"          address_pin_code as string,",
				"          address_country as string,",
				"          latitude as string,",
				"          longitude as string,",
				"          wp_db_id as string,",
				"          place_id as string,",
				"          google_cid_g as string,",
				"          flaberry_place_id_ur as string,",
				"          fb_page_id as string,",
				"          appointment_url as string,",
				"          store_email as string,",
				"          store_virtual_number as string,",
				"          store_phone as string,",
				"          business_hours_openi as string,",
				"          business_hours_closi as string,",
				"          store_manager_name as string,",
				"          store_manager_mobile as string,",
				"          payment_types as string,",
				"          parking_options as string,",
				"          store_opening_date as string,",
				"          store_size as string,",
				"          single_interface_sto as string,",
				"          slug as string,",
				"          lenskart_store_page_ as string,",
				"          google_maps_url as string,",
				"          google_search_url as string,",
				"          google_review_url as string,",
				"          bing as string,",
				"          foursquare_url as string,",
				"          yalwa_url as string,",
				"          dealsnyou_url as string,",
				"          magicpin_url as string,",
				"          review_short_url as string,",
				"          map_short_url as string,",
				"          from_the_brand as string,",
				"          labels as string,",
				"          busy_hours as string,",
				"          slightly_hours as string,",
				"          serviceOptions as string,",
				"          store_front_image as string,",
				"          is_union_territory as string,",
				"          created_at as string,",
				"          updated_at as string,",
				"          running_status as string,",
				"          ratingAndReviewCount as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source(output(",
				"          order_id as string,",
				"          transaction_id as string,",
				"          customer_id as string,",
				"          product_id as string,",
				"          store_id as string,",
				"          quantity as string,",
				"          order_date as string,",
				"          payment_method as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source3",
				"source(output(",
				"          customer_id as string,",
				"          {first name} as string,",
				"          {last name} as string,",
				"          email as string,",
				"          DOB as string,",
				"          address as string,",
				"          city as string,",
				"          region as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source4",
				"source1 select(mapColumn(",
				"          id,",
				"          size,",
				"          brand_name,",
				"          model_name,",
				"          prices,",
				"          classification,",
				"          wishlistCount,",
				"          purchaseCount,",
				"          avgRating",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"source2 select(mapColumn(",
				"          id,",
				"          lk_store_id,",
				"          alt_store_name_catch,",
				"          store_type_labels,",
				"          address_full,",
				"          address_locality,",
				"          address_city,",
				"          address_state,",
				"          store_email,",
				"          store_virtual_number,",
				"          store_phone,",
				"          ratingAndReviewCount",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"source3 select(mapColumn(",
				"          order_id,",
				"          transaction_id,",
				"          customer_id,",
				"          product_id,",
				"          store_id,",
				"          quantity,",
				"          order_date,",
				"          payment_method",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"source4 select(mapColumn(",
				"          customer_id,",
				"          {first name},",
				"          {last name},",
				"          email,",
				"          DOB,",
				"          address,",
				"          city,",
				"          region",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select4",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          id as string,",
				"          brand_name as string,",
				"          size as string,",
				"          model_name as string,",
				"          prices as integer,",
				"          classification as string,",
				"          wishlistCount as string,",
				"          purchaseCount as string,",
				"          avgRating as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1",
				"select3 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          order_id as string,",
				"          transaction_id as string,",
				"          customer_id as string,",
				"          product_id as string,",
				"          store_id as string,",
				"          quantity as integer,",
				"          order_date as string,",
				"          payment_method as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink2",
				"select4 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          customer_id as string,",
				"          {first name} as string,",
				"          {last name} as string,",
				"          email as string,",
				"          DOB as string,",
				"          address as string,",
				"          city as string,",
				"          region as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink3",
				"select2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          id as string,",
				"          lk_store_id as string,",
				"          alt_store_name_catch as string,",
				"          store_type_labels as string,",
				"          address_full as string,",
				"          address_locality as string,",
				"          address_city as string,",
				"          address_state as string,",
				"          store_email as string,",
				"          store_virtual_number as string,",
				"          store_phone as string,",
				"          ratingAndReviewCount as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink4"
			]
		}
	}
}